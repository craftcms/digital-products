{% extends "_layouts/cp" %}
{% set selectedSubnavItem = "productTypes" %}

{% set crumbs = [
  { label: "Digital Products"|t('digital-products'), url: url('digital-products/index') },
  { label: "Product Types"|t('digital-products'), url: url('digital-products/producttypes/index') }
] %}

{% set fullPageForm = true %}

{% set selectedTab = 'product-type-settings' %}
{% import "_includes/forms" as forms %}

{% block content %}
  <input type="hidden" name="action" value="digital-products/product-types/save">
  <input type="hidden" name="redirect" value="{{ 'digital-products/producttypes'|hash }}">
  {% if productType.id %}<input type="hidden" name="productTypeId" value="{{ productType.id }}">{% endif %}

  {{ forms.textField({
    first: true,
    label: "Name"|t('digital-products'),
    instructions: "What this product type will be called in the CP."|t('digital-products'),
    id: 'name',
    name: 'name',
    value: productType.name,
    errors: productType.getErrors('name'),
    autofocus: true,
    required: true,
    translatable: true
  }) }}

  {{ forms.textField({
    label: "Handle"|t('digital-products'),
    instructions: "How you’ll refer to this product type in the templates."|t('digital-products'),
    id: 'handle',
    class: 'code',
    name: 'handle',
    value: productType.handle,
    errors: productType.getErrors('handle'),
    required: true
  }) }}

  {{ forms.textField({
    label: "Automatic SKU Format"|t('digital-products'),
    instructions: "What the unique auto-generated SKUs should look like, when a SKU field is submitted without a value. You can include tags that output properties, such as {ex1} or {ex2}"|t('digital-products',{ ex1: '<code>{slug}</code>', ex2: '<code>{myCustomField}</code>' }),
    id: 'skuFormat',
    class: 'ltr',
    name: 'skuFormat',
    value: productType.skuFormat,
    errors: productType.getErrors('skuFormat')
  }) }}

  <hr>

  {% set siteRows = [] %}
  {% set siteErrors = productType.getErrors('siteSettings') %}

  {% for site in craft.app.sites.getAllSites() %}
    {% set siteSettings = productType.siteSettings[site.id] ?? null %}
    {% if siteSettings %}
      {% for attribute, errors in siteSettings.getErrors() %}
        {% set siteErrors = siteErrors|merge(errors) %}
      {% endfor %}
    {% endif %}
    {% set siteRows = siteRows|merge({
      (site.handle): {
        heading: site.name|t('site'),
          uriFormat: {
            value: siteSettings.uriFormat ?? null,
            hasErrors: siteSettings.hasErrors('uriFormat') ?? false
          },
          template: {
            value: siteSettings.template ?? null,
            hasErrors: siteSettings.hasErrors('template') ?? false,
          }
        }
    }) %}
  {% endfor %}

  {{ forms.editableTableField({
    label: "Site Settings"|t('app'),
    instructions: "Configure the product types’s site-specific settings."|t('app'),
    id: 'sites',
    name: 'sites',
    cols: {
      heading: {
        type: 'heading',
        heading: "Site"|t('app'),
        class: 'thin'
      },
      uriFormat: {
        type: 'singleline',
        heading: "Product type URI Format"|t('app'),
        info: "What product type URIs should look like for the site."|t('app'),
        placeholder: "Leave blank if categories don’t have URLs"|t('app'),
        code: true
      },
      template: {
        type: 'singleline',
        heading: "Template"|t('app'),
        info: "Which template should be loaded when an entry’s URL is requested."|t('app'),
        code: true
      },
    },
    rows: siteRows,
    staticRows: true,
    errors: siteErrors|unique
  }) }}

  <hr>
  
  {{ forms.fieldLayoutDesignerField({
    fieldLayout: productType.getProductFieldLayout(),
  }) }}

{% endblock %}

{% if brandNewProductType %}
  {% js %}
    new Craft.HandleGenerator('#name', '#handle');

    {% for site in craft.app.sites.getAllSites() %}
      new Craft.UriFormatGenerator('#name', '#sites tr[data-id="{{ site.handle }}"] textarea[name$="[uriFormat]"]', { suffix: '/{slug}' });
      new Craft.UriFormatGenerator('#name', '#sites tr[data-id="{{ site.handle }}"] textarea[name$="[template]"]', { suffix: '/_product' });
    {% endfor %}
  {% endjs %}
{% endif %}
